---
- name: Check if we're running on RedHat 7
  ansible.builtin.set_fact:
    os_is_redhat_7: "{{ ansible_facts['os_family'] == 'RedHat' and ansible_distribution_major_version == '7' }}"

- name: Setup for RedHat 7 - install sefcontext dependencies
  ansible.builtin.yum:
    name:
      - libselinux-python
      - policycoreutils-python
    state: installed
  when: os_is_redhat_7

- name: Setup for RedHat 8+ - install sefcontext dependencies
  ansible.builtin.yum:
    name:
      - python3-libselinux
      - policycoreutils-python-utils
    state: installed
  when: not os_is_redhat_7

- name: Ensure docker dependencies are installed
  ansible.builtin.yum:
    name: ["yum-utils", "device-mapper-persistent-data", "lvm2", "epel-release"]
    state: installed

- name: Add Docker repository
  ansible.builtin.command: "yum-config-manager --add-repo={{ docker.repo_url }}"
  args:
    creates: /etc/yum.repos.d/docker.repo

- name: Ensure docker is installed
  ansible.builtin.yum:
    name: ["docker-ce", "docker-ce-cli", "containerd.io"]
    state: installed

- name: Ensure docker service directory exists
  ansible.builtin.file:
    path: "{{ docker.service_file_dir }}"
    owner: "root"
    group: "root"
    state: directory
    mode: "0700"

- name: Set custom docker service configuration
  ansible.builtin.template:
    src: docker.service.j2
    dest: "{{ docker.service_file_dir }}/docker.conf"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: Reload docker

- name: "Ensure docker service configuration is reloaded before restarting the service"
  ansible.builtin.meta: flush_handlers

- name: Ensure docker daemon is running
  ansible.builtin.service:
    name: "{{ docker.service_name }}"
    state: started
    enabled: true
